name: Deploy to staging

on:
  workflow_dispatch:
    inputs:
      commit_hash:
        description: "Hash to deploy"
        required: true
        default: "latest"

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/inventory-service-be:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/inventory-service-be:latest

      - name: Deploy to EC2 via SSH
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$EC2_KEY" > ec2-key.pem
          chmod 400 ec2-key.pem

          ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST << 'EOF'
          echo "Logging into Docker..."
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

          echo "Pulling the latest Docker image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/inventory-service-be:latest

          echo "Stopping and removing old container..."
          docker stop inventory-service-be || true
          docker rm inventory-service-be || true

          echo "Ensuring network exists..."
          docker network create inventory-network || true

          echo "Running new container in inventory-service-network..."
          docker run -d --network=ec2-user_inventory-service-network -p 8080:8080 \
            --name inventory-service-be nathaniainfras/inventory-service-be:latest
          EOF
